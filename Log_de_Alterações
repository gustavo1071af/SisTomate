#dataDeInício: 27/03/2016

SISTOM-1<sucupira>: Usar os novos campos adicionadas na v1_to_v2 para gerar o mapa do talhao.
- A nova forma de calcular a dimensão da matriz(talhao) é:
y= qtd de ruas do talhão * 2(ca rua possui linhas a e b)
x= qtd de tomateiros por linha no talhão

- Para encaixar o tomateiro do bd na celula da matriz referente, foi feito a seguinte l[ogica:
O x é igual ao NumTom do tomaterio
-- Se a linha do tomateiro for "a". o y será rua + (rua - 1)
-- Caso contrário o y será rua * 2

- Foi adicinado um label com um "*" nas células que possuem tomateiros cadastrados na base.

- *Falta fazer*: As outras células da matriz que não possuem tomateiros da base devem se apresentar como um tomateiro com estado 1:*DONE*
-- na classe Mapa.java foi trocado o a cor padrão das células de Silver para Green(que é a cor do tomateiro mais sadio). 

SISTOM-2<sucupira>: Alterar nome da entidade "lavoura" para "talhão" e criar bean referente.
- Foi feita a alteração da base v3_to_v4, e foi feita a alteração de todas as consultas que tinha lavoura e trocado para talhao. Foi cansativo pois 
as queries estão soltas nos sistema.
- Foi criado o bean Talhao.java. Entretanto, não usei ainda...

- *Falta Fazer*: Montar bean talhao nas consultas que busca talhoes.

SISTOM-3<sucupira>: Refactor >> Montar estrutura DAO para padronizar código.
- As Estruturas DAO Criada:
--TomatesDAO -> Referente a todas as consultas com retorno de elementos de Tomates
--TalhaoDAO -> Referente a todas as consultas com retorno de elementos de Talhao
--ImagemProcessadaDao -> Referente a todas as consultas com retorno de elementos de ImagemProcessada
Obs. Criamos o bean de ImagemProcessada que antes era alocado dentro do bean Tomates

- Colocar todas as consultas do sistema na DAO relacionada ao bean retornado.
-- Abertura OK - Testes OK
-- PDI e Processamento OK - Testes OK
-- Mapa e TomateDialog OK - Testes OK
IMPORTANTE:
*A partir de agora só podemos fazer consultas ao banco nas classes DAO!*

SISTOM-4<sucupira>: Criar classe do automato e alterar tela de simulação;
Foi criado a classe do Autometo, entretanto está apenas no início da adaptação, pois teremos que definir o processo da simulação
até chegar nela.
Em Preencher_Variaveis.java foi removido os campos que não precisão mais, deixando apenas os campos "Humidade Rel. do Ar", 
" índice pluviométrico:", além da quatidade de interações.
Foi feito a tela da simulação que recebe o mapa atual do talhao, porém, pode ser que necessitamos de uma outra classe de mapa porque todos 
os elementos do mapa precisam de um estado(mesmo os que não estão na base).
- Foi criado uma nova classe(MapaParaSimulacao.java) baseado no Mapa.java; A dieferença é que esta criará um grid, em que cada elemente receberá um bean de Tomates, 
porque para simulação, calcularemos o próximo estado dos elementos de acordo com a situação dos seus vizinhos.
- Falta fazer: Vincular a classe do automato na tela da simulação.*DONE*
-- Alterei a matriz, o que antes era matriz de inteiro comum, para uma matriz de meu MeuJPanel, que é o Panel usado para os grids que representam um tomateiro 
e que logicamente possuem uma classe Tomates na sua composição. Contudo tem o estado que o automato necessita, não perdendo a estrutura do mapa.
- Fiz com que as variáveis sejam levada a classe da simulaçao, mostrando-os na tela ao lado dos botoes.

SISTOM-5<sucupira>: Mudar a organização dos estados, que atualmente está de 0-6, para 0-5. Pois na forma antiga o valor 0 nunca é usado;
- Impacto: com essa alteração, os tomates que tiverem menor ou igual a 3% de infecção não terá influencia para infectar vizinhos(levando em consideração o estado), 
pois ele estará com o estado 0.
- Aguandando a opnião da G. Kupac para a alteração
- Dúvida encontrada: A função setGradKey() na classe imagem não está coerente com a escala de estados nos artigos feitos, a função retorna o estado que a taxa é por aproximação.
Está certo isso? > Em testes feitos os resuldos seguem:
-- gk = 4 / resultado: estado 1 / de acordo com a metodologia dos artigos o resultado deveria ser: 2
-- gk = 13 / resultado: estado 2 / de acordo com a metodologia dos artigos o resultado deveria ser: 3

SISTOM-6<sucupira>: Fazer a animação(em java) dos paineis na tela da simulação.
- Foi utilizado uma thread da classe interna MyThread(dentro da classe painelDeSimulacao) para fazer as interações do Automato de modo dinâmico.
- O Primeiro botão(buttonIniciar) tem as ações iniciar(quando thread está suspensa), pausar(quando a thread está em operação) e continuar(quando a thread está pausada).
- O segundo botão(buttonProximo) tem a ação de ir para a proxima interação, entretanto o botão só é ativado quando thread pausada
- Falta fazer:
-- Ao reiniciar a simulação, o talhao deverá ser o original.
-- Testar a simulação

SISTOM-7<sucupira>: Fazer o validador no formulário da simulação(Preencher_Variaveis.java).

SISTOM-8<sucupira>: Fazer a modelagem da entidade Localidade e de seus DadosMeteorologicos que serão usados para simulação.
- Foi criado as entidades no banco de dados(versão 5), inclusive com os dados meteorologicos ja populados.
- foi criado os beans Localidade(onde guarda a informação do local onde foi coletados os dados) e DadosMeteorologiscos que está vinculado a uma Localidade.
Obs: no base temos apenas um localidade(por enquato a de teste), entretanto, modelei para o sistema possa ter mais de um caso for preciso.
- foi criado as classes DAO referente aos beans citados acima.
-Tambem foi criado uma classe(PopulaDadosMeteoro) que lê o arquivo excel e salva automaticamente os Dados meteorologicos no banco de dados, caso for necessário futuramente.

SISTOM-9<sucupira>: Colocar novos campos na tela de escolha de variaveis da simulação de acordo com o que foi decidido na reunião 04/05/2016 com a gizelle;
- FOI adicionado os novos campos, inclusive, mudei a estrutura da tela colocando um Borderlayout no painel principal, o form coloquei dentro de um outro painel
com um Grid Bag Layout(setei o painel para ficar no centro do painel principal) para facilitar no alinhamento dos campos e fiz um painel rodapé(setei para ficar no sul) que vai levar apenas o botão
de "Iniciar Simulação" para ficar semelhante das outras telas.
- Adaptamos os parametros para o painel de simulação para apresentar as variáveis escolhidadas.
- - Alinhamos os campos do formulario definindo o layout "Grid Bag Layout" e fizemos ajustes de alinhamento clicando com o botão direito do mouse 
no painel do formulário e selecionando "Customize Layout".

SISTOM-10<sucupira>: Adaptar automato para cada celula infectar os seus vizinhos de acordo com a direção do vento, e não ter o ccomportamento de infectado.
- Foi adicionado um atributo na classe de ImagemProcessada "estadoComVariacao". este atributo guardará a soma do estado com a variação na infecção.
Foi preciso criá-lo pois, o estado é inteiro e a variação não, logo fica dificil fazer um somatorio do estado com as variações. Sendo assim, o estado
será setado a cada infecção infecção com o valor arredondado do atributo estadoComVeriacao.
- Foi feita a função afetaVizinhaca na classe do Automato, que tem o objetivo de infectar as plantas vizinhas de acordo com a direcao do vento.
-- Primeiramente tivemos que alterar a funcao inicializa do automato para setar o valor do atributo estadoComVariacao com o valor do estado(transformado em Double).
-- fizemos as regras para infectar apenas o vizinho referente ao sentido da direcao e seus dois vizinhos ao lado. 
ex: Direcao = Sul_Para_Norte: infectados será a celula(planta) meioSuperior e suas duas vizinhas aos lados cantoEsquerdoSuperior e cantoDireitoSuperior.
-- Setamos o atributo estadoComVariacao para o (estadoComVariacao+variacao) e o atrbuto estado é setado com valor arredondado do estadoComVariacao.

SISTOM-11<sucupira>: Construção da função que calcula os riscos(3, 5 e 10) que serão usados para calcular a variacao que infectara os vizinhos.
- Foi feito a estrutura da função e a query que buscará as medias de temperatura, umidade e de chuva referente a cada dia de interação e usando uma media histórica 
de dados meteorologicos de 5 ou 10 anos.
- A média da chuva está definindo se choveu ou não naquele dia do ano, ou seja, se a media for >= 0.5, o sistema prevê que chuverá, caso contrário não 
choverá.
- Os riscos e o contador de dias favoraveis a requeima estão definidos como uma variavel geral(atributo) do automato, fizemos isso para ter acesso
a qualquer uma delas em todo processo de simulação.

SISTOM-12<sucupira>: Definir as regras de calculo de riscos.
- Foi definido o modelo que será usado para o calculo de riscos, Hyre(1954) está mais próximo do nosso sistema e dos dados que temos para a previsção.
- Portanto, esta definição de método precisará de alterações no modelo para guardar novos atributos de dados meteorológicos(temperatura mínim e precipitação)
agora são necessários.
- Os dados foram fornecidos pelo Instituto Nacional de Meteorologia: http://www.inmet.gov.br/portal/index.php?r=bdmep/bdmep
- Os Parametros são: risco 5, risco 7 e risco 10(aumento o nível do surto)

SISTOM-13<sucupira>: Consertar Bug que acontece na simulação em que 1 iteração acontece uma explosão de infecções(ex: norte_p_sul).
- Isso acontecia porque a matriz auxiliar do automato era uma referência da matriz do painel, sendo assim ela alterava os valores da matriz original
e gerava um erro em cascata, assim explicava a explosão de infecção.
- Foi feito umas modificações nos beans para poder cloná-los, extendemos os beans da classe Clonable e sobrescrevemos . Então quando quisermos alterar uma cópia de um bean sem alterar a original
é só fazer : 
beanAux = beanOriginal.clone();
O clone não é uma referencia, diferente do beanAux = beanOriginal;
- Para resolver o bug, fizemos:
        for (i = 0; i < this.X; i++) {
            for (j = 0; j < this.Y; j++) {
                aux[i][j] = new MeuJPanel();
                Tomates novoTomate = matriz[i][j].getTom().clone();
                aux[i][j].setTom(novoTomate);
            }//for
        }//for 

SISTOM-14<sucupira>: Alterar o campo Chuva(antigo) por Precipitação, e fazer com que os dados do formulário da simulação seja usados na simulação
quando for a data escolhida.
- Foi adicionado o campo novo e removido o antigo(chuva). na classe do automato, ao calcular os riscos, usamos a data preenchida no 
formulario para usar os parametros passados (temperatura, precipitação) quando for da mesma data nos calculos das médias.
- Aproveitamos para alinhar os campos clicando com o botão direito do mouse no painel do formulário e selecionando "Customize Layout". 

SISTOM-15<sucupira>: Criar o Botão que escolhe o combate a ser usado no talhão quando a simulação for parada.
- Fizemos a classe enum do Combate utilizado a metodologia strategy para setar as propriedades de cada elemento da enum.
- Fizemos uma nova classe jDialog(EscolhaCombateDialog) que aparecerá quando clicar na ação de escolher o combate na simulação. Foi necessário,
criar esta classe porque na classe JOptionPane não tem como customizar o painel, sendo assim, impossibilitava a apresentação das propriedades
do combate selecionado.
-- Uma modificação importante de salientar, é que usamos o frame princiapal para construir o dialog, assim usamos ele para o posicionamento do dialog
ficar exatamento no meio da aplicação.
this.setLocationRelativeTo(parent);
- Na classe Painel de simulação foi feita uma regra para o botão de escolha do combate só aparecer quando a simulação estiver parada e
o não existir um combate em progresso.
- No classe automato foi criada uma nova função(aplicaCombate()) que usa o combate para variar seu estado subtraindo o resultado do Combate selecionado, diferente
da infecção que soma a variação das regras(SISTOM-10).
Obs: Diferente da infecção, o combate é aplicado na própria célula(tomateiro) e não nas suas visinhas. 


SISTOM-16<sucupira>:Fazer ação de restart da simulação.

SISTOM-17<sucupira>:Alterar formulário de simulação para incluir o campo de Intensidade do Vento, para que seu valor vai incentivar um espalhamento
mais abundante se a velocidade estiver "forte".

SISTOM-18<sucupira>:Consertar dados meteorologicos faltosos entre 01/07/2001 - 30/04/2002 usando a média da data dos outros anos. Sendo assim, podemos colocar a media historica de 
15 anos no formulario.
- Foi criado uma classe para consertar os dados meteorologiscos, sendo assim, fizemos os insertes dos dados faltosos e alteramos a vers
ao da base para 7.
- Foi alterado a data de inicio e fim da coleta da localidade 1(Alferes).
- Adicionamos a opção que faltava de 15 anos para a média histórica no formulário da simulação.